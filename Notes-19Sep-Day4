Docker:
********************************************
Lab already has docker installed

$ sudo su -
$ docker --version

Start the docker engine

$ systemctl start docker

$ systemctl status docker

Docker Images:
*************************

Demo1: Pull Image from docker hub to your local docker host

docker pull imagename

$ docker pull ubuntu

Docker will pull the image with tag as latest from docker hub library

OR

docker pull imagename:tagname

$ docker pull ubuntu:20.04

Will pull ubuntu image of tag 20.04

2. Check the list of  images pulled from docker host

$ docker images

OR

$ docker image ls

3. Search for images:
**************
$ docker search hello-world

4. Delete the images from local docker host
*******************
$ docker rmi ubuntu

$ docker rmi ubuntu:20.04

5. Run an Image to create a container
****************

Docker run Imagename


$ docker run ubuntu

Run command: will first check locally if image ubuntu is available or not

If image is not available locally

RUn command will automatically

> pull image from docker hub
> run the image to launch a container
> user will be inside the container process
> user will not be able to see the host machine cursor


6. See the list of container created

$ docker ps -a


7.  Launch a container from an Image and container should be up & running

When we execute the run command we have to mention in which mode we want to launch the container

Foreground mode

$ docker run -it imagename

-i : interactive
-t: terminal

$ docker run -it ubuntu

Container will be launched
Will be up & running
User will be attached to the container
That is , user will be on the container terminal

Whenever you are attached to the terminal of the container, using the following options you will come out of the container:

Ctl pq

User will come out of the container and container will be still up and running

exit

User will come out of the container and container will be exited

Attach to the terminal of the container again:

$ docker attach containerid/containername

Execute exit command to comout of container

User will come out of the container and container will be exited

To start a exited container:

$ docker start containerid/name

To stop a running container

$ docker stop containerid/name


Detached mode (-d)
====================================================

$ docker run -d nginx
$ docker ps -a
$ docker container ls â€“ list containers in running status

Container will be launched
Will be up & running
User will be detached to the container ie: container is running in the background, user can continue working on the host machine

Delete a Container from the host machine

$ docker rm -f containername/conatinerid
$ docker rm -f n1
$ docker ps -a : no container will be there
